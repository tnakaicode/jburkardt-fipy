Thu Nov  8 17:34:26 2018

mesh_test:
  FENICS/Python version
  Demonstrate some properties of meshes.

mesh_test1:
  Generate meshes with various options.

  Plotting a UnitIntervalMesh
  Graphics saved as "unitintervalmesh.png"
  Plotting a RectangleMesh
  Graphics saved as "rectanglemesh.png"
  Plotting a UnitCubeMesh
  Graphics saved as "unitcubemesh.png"
  UnitCubeMesh created 144 cells.
  Plotting a Circle Minus Rectangle Mesh
  Graphics saved as "circleminusrectanglemesh.png"
  Plot a mesh created from an XML file
  Graphics saved as "cape.png"
  cape.xml created 6408 cells.

mesh_test2:
  Create just one mesh, and query it.
  Plotting an example mesh.
  Graphics saved as "example_mesh.png"

  my_mesh.num_vertices ( ) = 12.
  my_mesh.num_cells ( ) = 12.
  my_mesh.num_edges ( ) = 0.
  my_mesh.num_faces ( ) = 12.
  my_mesh.num_facets ( ) = 0.

  Call my_mesh.init(), which defines the extra information.

  my_mesh.num_vertices ( ) = 12.
  my_mesh.num_cells ( ) = 12.
  my_mesh.num_edges ( ) = 23.
  my_mesh.num_faces ( ) = 12.
  my_mesh.num_facets ( ) = 23.

  my_mesh.hmin() = 0.600925
  my_mesh.hmax() = 0.600925
  my_mesh.ufl_cell() = triangle

  my_mesh.coordinates():
[[ 0.          0.        ]
 [ 0.5         0.        ]
 [ 1.          0.        ]
 [ 0.          0.33333333]
 [ 0.5         0.33333333]
 [ 1.          0.33333333]
 [ 0.          0.66666667]
 [ 0.5         0.66666667]
 [ 1.          0.66666667]
 [ 0.          1.        ]
 [ 0.5         1.        ]
 [ 1.          1.        ]]

  my_mesh.cells():
[[ 0  1  3]
 [ 1  3  4]
 [ 1  2  5]
 [ 1  4  5]
 [ 3  4  7]
 [ 3  6  7]
 [ 4  5  7]
 [ 5  7  8]
 [ 6  7  9]
 [ 7  9 10]
 [ 7  8 11]
 [ 7 10 11]]

mesh_test:
  Normal end of execution.

Thu Nov  8 17:34:27 2018